services:
  database:
    image: postgres:13.1
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    volumes:
      - postgres_data:/var/lib/postgresql/data
  frontend:
    build:
      context: .
      dockerfile: frontend/frontend-dev.dockerfile
    command: npm start
    ports:
      - 127.0.0.1:3000:3000
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
  pubsub:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
    command: gcloud beta emulators pubsub start --host-port=0.0.0.0:8085
    environment:
      - PUBSUB_PROJECT_ID=${GCP_PROJECT}
    volumes:
      - cloud_sdk_config:/root/.config
      - cloud_sdk_kube:/root/.kube
  setup-subscriber:
    build:
      context: .
      dockerfile: pubsub/pubsub.dockerfile
    command: python setup_subscription.py
    environment:
      - PUBSUB_EMULATOR_HOST=pubsub:8085
      - GCP_PROJECT
    volumes:
      - ./pubsub/setup_subscription.py:/setup_subscription.py
    depends_on:
      - pubsub
      - worker
  website:
    build:
      context: .
      dockerfile: website/website.dockerfile
    command: django-admin runserver website:8080
    environment:
      - DJANGO_SETTINGS_MODULE=website.settings.development
      - SECRET_KEY
      - DB_ENGINE=django.db.backends.postgresql
      - DB_HOST=database
      - DB_PORT=5432
      - DB_DATABASE
      - DB_USER
      - DB_PASSWORD
      - ALLOWED_HOSTS=localhost,website
      - PORT=8080
      - PUBSUB_EMULATOR_HOST=pubsub:8085
      - GCP_PROJECT
      - GOOGLE_AUTH_CLIENT_ID
      - SLACK_WEBHOOK_URL
    ports:
      - 127.0.0.1:8080:8080
    volumes:
      - ./website/src/website:/app/website/src/website
      - website_public:/app/website/src/website/public
      - website_static:/app/website/src/website/static
      - website_frontend:/app/website/src/website/templates/frontend
      - ./calculator/src/calculator:/app/calculator/src/calculator
    depends_on:
      - database
      - pubsub
  worker:
    build:
      context: .
      dockerfile: worker/worker.dockerfile
    command: django-admin runserver worker:8080
    environment:
      - DJANGO_SETTINGS_MODULE=worker.settings.development
      - SECRET_KEY
      - DB_ENGINE=django.db.backends.postgresql
      - DB_HOST=database
      - DB_PORT=5432
      - DB_DATABASE
      - DB_USER
      - DB_PASSWORD
      - ALLOWED_HOSTS=localhost,worker
      - PORT=8080
      - GNOMAD_DATA_PATH=/mnt/data
      - CLINVAR_DATA_PATH=/mnt/data
    ports:
      - 127.0.0.1:8081:8080
    volumes:
      - ./worker/src/worker:/app/worker/src/worker
      - ./calculator/src/calculator:/app/calculator/src/calculator
      - ./data:/mnt/data
    depends_on:
      - database
volumes:
  cloud_sdk_config:
  cloud_sdk_kube:
  frontend_node_modules:
  postgres_data:
  website_public:
  website_static:
  website_frontend:
